name: Dotnet

on:
  workflow_dispatch:
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Dotnet Project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Dotnet SDK from global.json
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run the website in background
        run: |
          nohup dotnet run --no-build --property:Configuration=Release --project ./Decksplain.csproj --urls "http://localhost:5000" > output.log 2>&1 &
          echo $! > website.pid

      - name: Wait for the website to start
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:5000 > /dev/null; then
              echo "Website is up!"
              exit 0
            fi
            sleep 2
          done
          echo "Website did not start in time"
          cat output.log
          exit 1

      - name: Mirror the site using wget
        run: |
          wget \
            --mirror \
            --convert-links \
            --adjust-extension \
            --page-requisites \
            --no-parent \
            --directory-prefix=mirrored-site \
            http://localhost:5000

      - name: Stop the website
        run: |
          kill $(cat website.pid)

      - name: Restructure HTML files into folders with index.html
        run: |
          cd mirrored-site
          find . -type f -name '*.html' ! -name 'index.html' | while read -r file; do
            dir=$(dirname "$file")
            base=$(basename "$file" .html)
            mkdir -p "$dir/$base"
            mv "$file" "$dir/$base/index.html"
          done

      - name: Fix internal links to use clean URLs
        run: |
          cd mirrored-site
          find . -type f -name '*.html' -exec sed -i 's/href="\([^"]*\)\.html"/href="\1\/"/g' {} +

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./mirrored-site/localhost:5000

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
